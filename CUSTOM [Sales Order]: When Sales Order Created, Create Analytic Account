# Available variables:
#  - env: Odoo Environment on which the action is triggered
#  - model: Odoo Model of the record on which the action is triggered; is a void recordset
#  - record: record on which the action is triggered; may be void
#  - records: recordset of all records on which the action is triggered in multi-mode; may be void
#  - time, datetime, dateutil, timezone: useful Python libraries
#  - float_compare: Odoo function to compare floats based on specific precisions
#  - log: log(message, level='info'): logging function to record debug information in ir.logging table
#  - UserError: Warning Exception to use with raise
#  - Command: x2Many commands namespace
# To return an action, assign: action = {...}



# Check if the analytic_account_id is not set and the name is not empty or "False"
if not record.sudo().analytic_account_id and record.sudo().name not in (False, ''):
  # Create a new Analytic Account
  new_analytic_account = env['account.analytic.account'].sudo().create({
    'name': record.sudo().name,
    'company_id': record.sudo().company_id.id,
    'partner_id': record.sudo().partner_id.id
  })

  # Set the new Analytic Account to the sale.order's analytic_account_id field
  record.sudo().write({'analytic_account_id': new_analytic_account.id})
